---
format:
  name: build_it
  generator:
    name: build_it:json
---

#checkNullSafety: true

classes:
- name: Class
  comments: "Class is used to describe the JSON class"
  fields:
  - name: annotations
    type: List<String>
    comments: "Metadata describing the JSON class"
    jsonKey:    
      defaultValue: []
  - name: comments
    type: String?
    comments: "Documenting comments for JSON class"
  - name: fields
    type: List<Field>
    comments: "List of JSON fields"
    jsonKey:    
      defaultValue: []
  - name: immutable
    type: bool?
    comments: "Indicates the immutability of class fields"
  - name: jsonSerializable
    type: JsonSerializableAnnotation?
    comments: "Represents annotation JsonSerializable"
  - name: name
    type: String?
    comments: "JSON class name"

- name: Enum
  comments: "Enum is used to describe the JSON enum"
  fields:
  - name: value
    type: String
    comments: "Enumeration value name"
  - name: jsonValue
    type: JsonValueAnnotation?
    comments: "Represents annotation JsonValue"

- name: Field
  comments: "Field is used to describe the JSON field"
  fields:
  - name: annotations
    type: List<String>
    comments: "Metadata describing the JSON field"
    jsonKey:    
      defaultValue: []
  - name: comments
    type: String?
    comments: "Documenting comments for JSON field"
  - name: jsonKey
    type: JsonKeyAnnotation?
    comments: "Represents annotation JsonKey"
  - name: name
    type: String?
    comments: "JSON field name"
  - name: type
    type: String?
    comments: "JSON field type"

- name: JsonKeyAnnotation
  comments: "Represents annotation JsonKey"
  fields:
  - name: defaultValue
    type: Object?
  - name: disallowNullValue
    type: bool?
  - name: fromJson$
    type: String?
    jsonKey:
      name: fromJson
  - name: ignore
    type: bool?
  - name: includeIfNull
    type: bool?
  - name: name
    type: String?
  - name: required
    type: bool?
  - name: toJson$
    type: String?
    jsonKey:
      name: toJson
  - name: unknownEnumValue
    type: Object?

- name: JsonSerializableAnnotation
  comments: "Represents annotation JsonSerializable"
  fields:
  - name: anyMap
    type: bool?
  - name: checked
    type: bool?
  - name: createFactory
    type: bool?
  - name: createToJson
    type: bool?
  - name: disallowUnrecognizedKeys
    type: bool?  
  - name: explicitToJson
    type: bool?
  - name: fieldRename
    type: String?
  - name: genericArgumentFactories
    type: bool?
  - name: ignoreUnannotated
    type: bool?
  - name: includeIfNull
    type: bool?

- name: JsonValueAnnotation
  comments: "Represents annotation JsonValue"
  fields:
  - name: value
    type: Object

- name: Library
  comments: "Library is used to describe the JSON library"
  fields:
  - name: checkNullSafety
    type: bool?
    comments: "Indicates the need for a null safety check during code generation"
  - name: classes
    type: List<Class>
    comments: "List of JSON classes"
    jsonKey:
      defaultValue: []
  - name: enums
    type: List<Enum>
    comments: "List of JSON enums"
    jsonKey:
      defaultValue: []
  - name: exports
    type: List<String>
    comments: "List of export directives"
    jsonKey:
      defaultValue: []
  - name: immutable
    type: bool?
    comments: "Indicates immutability"
  - name: imports
    type: List<String>
    jsonKey:
      defaultValue: []
    comments: "List of import directives"
  - name: jsonSerializable
    type: JsonSerializableAnnotation?
    comments: "Default values for annotation JsonSerializable"
  - name: parts
    type: List<String>
    comments: "List of part directives"  
    jsonKey:
      defaultValue: []
